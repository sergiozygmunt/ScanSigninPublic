/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.desko.fullpage;

public class PageScanApi {
  public static int getLsIr() {
    return PageScanApiJNI.lsIr_get();
  }

  public static int getLsVisible() {
    return PageScanApiJNI.lsVisible_get();
  }

  public static int getLsUvOnly() {
    return PageScanApiJNI.lsUvOnly_get();
  }

  public static int getLsUv3LED() {
    return PageScanApiJNI.lsUv3LED_get();
  }

  public static long getPSA_UNDEF_PIXELS_PER_MM() {
    return PageScanApiJNI.PSA_UNDEF_PIXELS_PER_MM_get();
  }

  public static long getPSA_150_DPI() {
    return PageScanApiJNI.PSA_150_DPI_get();
  }

  public static long getPSA_240_DPI() {
    return PageScanApiJNI.PSA_240_DPI_get();
  }

  public static long getPSA_300_DPI() {
    return PageScanApiJNI.PSA_300_DPI_get();
  }

  public static long getPSA_450_DPI() {
    return PageScanApiJNI.PSA_450_DPI_get();
  }

  public static long getPSA_600_DPI() {
    return PageScanApiJNI.PSA_600_DPI_get();
  }

  public static long getResUndefined() {
    return PageScanApiJNI.resUndefined_get();
  }

  public static long getResLow() {
    return PageScanApiJNI.resLow_get();
  }

  public static long getResDefault() {
    return PageScanApiJNI.resDefault_get();
  }

  public static long getResHigh() {
    return PageScanApiJNI.resHigh_get();
  }

  public static int getRrNoErr() {
    return PageScanApiJNI.rrNoErr_get();
  }

  public static int getRrFailedRecognition() {
    return PageScanApiJNI.rrFailedRecognition_get();
  }

  public static int getRrDocWithoutMrz() {
    return PageScanApiJNI.rrDocWithoutMrz_get();
  }

  public static int getRrDocRotation() {
    return PageScanApiJNI.rrDocRotation_get();
  }

  public static int getRrGoodRecognition() {
    return PageScanApiJNI.rrGoodRecognition_get();
  }

  public static int getRrToManyRejections() {
    return PageScanApiJNI.rrToManyRejections_get();
  }

  public static int getRrDocLayoutNotOK() {
    return PageScanApiJNI.rrDocLayoutNotOK_get();
  }

  public static int getRrUnknownError() {
    return PageScanApiJNI.rrUnknownError_get();
  }

  public static int getRrNoDoc() {
    return PageScanApiJNI.rrNoDoc_get();
  }

  public static int getAPI_VERSION() {
    return PageScanApiJNI.API_VERSION_get();
  }

  public static int getAPI_NUMBER() {
    return PageScanApiJNI.API_NUMBER_get();
  }

  public static int getAPI_RELEASE() {
    return PageScanApiJNI.API_RELEASE_get();
  }

  public static int getPsaSuccess() {
    return PageScanApiJNI.psaSuccess_get();
  }

  public static int getPsaFail() {
    return PageScanApiJNI.psaFail_get();
  }

  public static int getPsaDevice_NotFound() {
    return PageScanApiJNI.psaDevice_NotFound_get();
  }

  public static int getPsaDevice_NotConnected() {
    return PageScanApiJNI.psaDevice_NotConnected_get();
  }

  public static int getPsaDevice_AlreadyConnected() {
    return PageScanApiJNI.psaDevice_AlreadyConnected_get();
  }

  public static int getPsaDevice_UnexpectedAnswer() {
    return PageScanApiJNI.psaDevice_UnexpectedAnswer_get();
  }

  public static int getPsaUnkownError() {
    return PageScanApiJNI.psaUnkownError_get();
  }

  public static int getPsaIntf_InvalidBufferSize() {
    return PageScanApiJNI.psaIntf_InvalidBufferSize_get();
  }

  public static int getPsaIntf_NotCalibrated() {
    return PageScanApiJNI.psaIntf_NotCalibrated_get();
  }

  public static int getPsaUnsupportedFunction() {
    return PageScanApiJNI.psaUnsupportedFunction_get();
  }

  public static void SetLastPSAError(int Error, String Message, String Function) {
    PageScanApiJNI.SetLastPSAError(Error, Message, Function);
  }

  public static int getDebugNone() {
    return PageScanApiJNI.debugNone_get();
  }

  public static int getDebugNotice() {
    return PageScanApiJNI.debugNotice_get();
  }

  public static int getDebugSystem() {
    return PageScanApiJNI.debugSystem_get();
  }

  public static int getDebugError() {
    return PageScanApiJNI.debugError_get();
  }

  public static int getLogOff() {
    return PageScanApiJNI.logOff_get();
  }

  public static int getLogFatal() {
    return PageScanApiJNI.logFatal_get();
  }

  public static int getLogError() {
    return PageScanApiJNI.logError_get();
  }

  public static int getLogWarn() {
    return PageScanApiJNI.logWarn_get();
  }

  public static int getLogInfo() {
    return PageScanApiJNI.logInfo_get();
  }

  public static int getLogDebug() {
    return PageScanApiJNI.logDebug_get();
  }

  public static int getLogTrace() {
    return PageScanApiJNI.logTrace_get();
  }

  public static int ConnectToDevice() {
    return PageScanApiJNI.ConnectToDevice();
  }

  public static int DisconnectFromDevice() {
    return PageScanApiJNI.DisconnectFromDevice();
  }

  public static int ResetDevice() {
    return PageScanApiJNI.ResetDevice();
  }

  public static boolean IsDeviceConnected() {
    return PageScanApiJNI.IsDeviceConnected();
  }

  public static boolean IsDevicePlugged() {
    return PageScanApiJNI.IsDevicePlugged();
  }

  public static int UpdateFirmware(byte[] FirmwareData, long DataSize, int LineCount, boolean UpdateBootCode) {
    return PageScanApiJNI.UpdateFirmware(FirmwareData, DataSize, LineCount, UpdateBootCode);
  }

  public static int RequestPentaConfig(int[] nBytes) {
    return PageScanApiJNI.RequestPentaConfig(nBytes);
  }

  public static int GetPentaConfig(byte[] ConfigBuffer) {
    return PageScanApiJNI.GetPentaConfig(ConfigBuffer);
  }

  public static int SetPentaConfig(byte[] ConfigBuffer, int nBytes) {
    return PageScanApiJNI.SetPentaConfig(ConfigBuffer, nBytes);
  }

  public static int getDeviceTypeUnknown() {
    return PageScanApiJNI.deviceTypeUnknown_get();
  }

  public static int getDeviceTypeGen3() {
    return PageScanApiJNI.deviceTypeGen3_get();
  }

  public static int getDeviceTypeGen4() {
    return PageScanApiJNI.deviceTypeGen4_get();
  }

  public static long getSupportUvLight() {
    return PageScanApiJNI.supportUvLight_get();
  }

  public static long getSupportColor() {
    return PageScanApiJNI.supportColor_get();
  }

  public static long getSupportBarcode() {
    return PageScanApiJNI.supportBarcode_get();
  }

  public static long getSupportMsr() {
    return PageScanApiJNI.supportMsr_get();
  }

  public static long getSupportTextDisplay() {
    return PageScanApiJNI.supportTextDisplay_get();
  }

  public static long getSupportExternalStatusLed() {
    return PageScanApiJNI.supportExternalStatusLed_get();
  }

  public static long getSupportExternalBuzzer() {
    return PageScanApiJNI.supportExternalBuzzer_get();
  }

  public static long getSupportGraphicalDisplay() {
    return PageScanApiJNI.supportGraphicalDisplay_get();
  }

  public static String GetDllVersion() {
    return PageScanApiJNI.GetDllVersion();
  }

  public static int GetAPIInfo(TPSAAPIInfo APIInfo) {
    return PageScanApiJNI.GetAPIInfo(TPSAAPIInfo.getCPtr(APIInfo), APIInfo);
  }

  public static int GetSystemInfo(TPSADeviceInfo DeviceInfo) {
    return PageScanApiJNI.GetSystemInfo(TPSADeviceInfo.getCPtr(DeviceInfo), DeviceInfo);
  }

  public static int GetSystemInfoFlags(long[] DeviceInfoFlags) {
    return PageScanApiJNI.GetSystemInfoFlags(DeviceInfoFlags);
  }

  public static int GetSystemVidPid(int[] Vid, int[] Pid) {
    return PageScanApiJNI.GetSystemVidPid(Vid, Pid);
  }

  public static int GetDeviceType() {
    return PageScanApiJNI.GetDeviceType();
  }

  public static int GetResolutionInfo(long Resolution, int[] ImageWidth, int[] ImageHeight, int[] PixelPerMeterX, int[] PixelPerMeterY) {
    return PageScanApiJNI.GetResolutionInfo(Resolution, ImageWidth, ImageHeight, PixelPerMeterX, PixelPerMeterY);
  }

  public static long getKeyNone() {
    return PageScanApiJNI.keyNone_get();
  }

  public static long getKeyDllCompileDate() {
    return PageScanApiJNI.keyDllCompileDate_get();
  }

  public static long getKeyDllCompileTime() {
    return PageScanApiJNI.keyDllCompileTime_get();
  }

  public static long getKeyDllVersionString() {
    return PageScanApiJNI.keyDllVersionString_get();
  }

  public static long getKeyApiVersionString() {
    return PageScanApiJNI.keyApiVersionString_get();
  }

  public static long getKeyDeviceVid() {
    return PageScanApiJNI.keyDeviceVid_get();
  }

  public static long getKeyDevicePid() {
    return PageScanApiJNI.keyDevicePid_get();
  }

  public static long getKeyDeviceFirmwareDate() {
    return PageScanApiJNI.keyDeviceFirmwareDate_get();
  }

  public static long getKeyDeviceFirmwareTime() {
    return PageScanApiJNI.keyDeviceFirmwareTime_get();
  }

  public static long getKeyDeviceFirmwareVersionString() {
    return PageScanApiJNI.keyDeviceFirmwareVersionString_get();
  }

  public static long getKeyDeviceFirmwareVersionMajor() {
    return PageScanApiJNI.keyDeviceFirmwareVersionMajor_get();
  }

  public static long getKeyDeviceFirmwareVersionMinor() {
    return PageScanApiJNI.keyDeviceFirmwareVersionMinor_get();
  }

  public static long getKeyDeviceProductionId() {
    return PageScanApiJNI.keyDeviceProductionId_get();
  }

  public static long getKeyDeviceSerialNumber() {
    return PageScanApiJNI.keyDeviceSerialNumber_get();
  }

  public static long getKeyDevicePcbRevision() {
    return PageScanApiJNI.keyDevicePcbRevision_get();
  }

  public static long getKeyDeviceSupportUvLight() {
    return PageScanApiJNI.keyDeviceSupportUvLight_get();
  }

  public static long getKeyDeviceSupportColor() {
    return PageScanApiJNI.keyDeviceSupportColor_get();
  }

  public static long getKeyDeviceSupportBarcode() {
    return PageScanApiJNI.keyDeviceSupportBarcode_get();
  }

  public static long getKeyDeviceSupportMsr() {
    return PageScanApiJNI.keyDeviceSupportMsr_get();
  }

  public static long getKeyDeviceSupportTextDisplay() {
    return PageScanApiJNI.keyDeviceSupportTextDisplay_get();
  }

  public static long getKeyDeviceSupportExternalStatusLed() {
    return PageScanApiJNI.keyDeviceSupportExternalStatusLed_get();
  }

  public static long getKeyDeviceSupportExternalBuzzer() {
    return PageScanApiJNI.keyDeviceSupportExternalBuzzer_get();
  }

  public static long getKeyDeviceSupportGraphicalDisplay() {
    return PageScanApiJNI.keyDeviceSupportGraphicalDisplay_get();
  }

  public static boolean HasPropertyString(long Key) {
    return PageScanApiJNI.HasPropertyString(Key);
  }

  public static int GetPropertyStringSize(long Key, int[] BufferSize) {
    return PageScanApiJNI.GetPropertyStringSize(Key, BufferSize);
  }

  public static int GetPropertyString(long Key, short[] ValueBuffer, int BufferSize) {
    return PageScanApiJNI.GetPropertyString(Key, ValueBuffer, BufferSize);
  }

  public static boolean HasPropertyInt(long Key) {
    return PageScanApiJNI.HasPropertyInt(Key);
  }

  public static int GetPropertyInt(long Key, int[] Value) {
    return PageScanApiJNI.GetPropertyInt(Key, Value);
  }

  public static boolean HasPropertyUInt(long Key) {
    return PageScanApiJNI.HasPropertyUInt(Key);
  }

  public static int GetPropertyUInt(long Key, long[] Value) {
    return PageScanApiJNI.GetPropertyUInt(Key, Value);
  }

  public static boolean HasPropertyDouble(long Key) {
    return PageScanApiJNI.HasPropertyDouble(Key);
  }

  public static int GetPropertyDouble(long Key, int[] Value) {
    return PageScanApiJNI.GetPropertyDouble(Key, Value);
  }

  public static char getSluPermanent() {
    return PageScanApiJNI.sluPermanent_get();
  }

  public static char getSluFlashing() {
    return PageScanApiJNI.sluFlashing_get();
  }

  public static char getSlcBlack() {
    return PageScanApiJNI.slcBlack_get();
  }

  public static char getSlcRed() {
    return PageScanApiJNI.slcRed_get();
  }

  public static char getSlcGreen() {
    return PageScanApiJNI.slcGreen_get();
  }

  public static char getSlcYellow() {
    return PageScanApiJNI.slcYellow_get();
  }

  public static char getSlcBlue() {
    return PageScanApiJNI.slcBlue_get();
  }

  public static char getSlcPurple() {
    return PageScanApiJNI.slcPurple_get();
  }

  public static char getSlcTurquise() {
    return PageScanApiJNI.slcTurquise_get();
  }

  public static char getSlcwhite() {
    return PageScanApiJNI.slcwhite_get();
  }

  public static int getINFINITE_DURATION_STATUSLED() {
    return PageScanApiJNI.INFINITE_DURATION_STATUSLED_get();
  }

  public static int SetStatusLEDSettings(boolean ActiveState, TPSAStatusLEDSettings StatusLEDSetting) {
    return PageScanApiJNI.SetStatusLEDSettings(ActiveState, TPSAStatusLEDSettings.getCPtr(StatusLEDSetting), StatusLEDSetting);
  }

  public static int GetStatusLEDSettings(boolean ActiveState, TPSAStatusLEDSettings StatusLEDSetting) {
    return PageScanApiJNI.GetStatusLEDSettings(ActiveState, TPSAStatusLEDSettings.getCPtr(StatusLEDSetting), StatusLEDSetting);
  }

  public static int UseStatusLED(boolean Enabled) {
    return PageScanApiJNI.UseStatusLED(Enabled);
  }

  public static int SetExtStatusLED(char color) {
    return PageScanApiJNI.SetExtStatusLED(color);
  }

  public static int UseExtStatusLED(boolean Enabled, boolean UseGreen, int Duration) {
    return PageScanApiJNI.UseExtStatusLED(Enabled, UseGreen, Duration);
  }

  public static int SetBuzzerSettings(TPSABuzzerSettings BuzzerSettings) {
    return PageScanApiJNI.SetBuzzerSettings(TPSABuzzerSettings.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int GetBuzzerSettings(TPSABuzzerSettings BuzzerSettings) {
    return PageScanApiJNI.GetBuzzerSettings(TPSABuzzerSettings.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int SetExtBuzzerSettings(TPSABuzzerSettings BuzzerSettings) {
    return PageScanApiJNI.SetExtBuzzerSettings(TPSABuzzerSettings.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int GetExtBuzzerSettings(TPSABuzzerSettings BuzzerSettings) {
    return PageScanApiJNI.GetExtBuzzerSettings(TPSABuzzerSettings.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int SetBuzzerSettings2(TPSABuzzerSettings2 BuzzerSettings) {
    return PageScanApiJNI.SetBuzzerSettings2(TPSABuzzerSettings2.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int GetBuzzerSettings2(TPSABuzzerSettings2 BuzzerSettings) {
    return PageScanApiJNI.GetBuzzerSettings2(TPSABuzzerSettings2.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int SetExtBuzzerSettings2(TPSABuzzerSettings2 BuzzerSettings) {
    return PageScanApiJNI.SetExtBuzzerSettings2(TPSABuzzerSettings2.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int GetExtBuzzerSettings2(TPSABuzzerSettings2 BuzzerSettings) {
    return PageScanApiJNI.GetExtBuzzerSettings2(TPSABuzzerSettings2.getCPtr(BuzzerSettings), BuzzerSettings);
  }

  public static int UseBuzzer() {
    return PageScanApiJNI.UseBuzzer();
  }

  public static int UseExtBuzzer() {
    return PageScanApiJNI.UseExtBuzzer();
  }

  public static int getWfdmAuto() {
    return PageScanApiJNI.wfdmAuto_get();
  }

  public static int getWfdmManual() {
    return PageScanApiJNI.wfdmManual_get();
  }

  public static int ReadOcrDevice(int[] OcrResult, long[] MrzBufferSize) {
    return PageScanApiJNI.ReadOcrDevice(OcrResult, MrzBufferSize);
  }

  public static int GetOcrOutputDevice(byte[] MrzBuffer, long MrzBufferSize) {
    return PageScanApiJNI.GetOcrOutputDevice(MrzBuffer, MrzBufferSize);
  }

  public static int getTouchUp() {
    return PageScanApiJNI.TouchUp_get();
  }

  public static int getTouchDown() {
    return PageScanApiJNI.TouchDown_get();
  }

  public static int Scan() {
    return PageScanApiJNI.Scan();
  }

  public static int IsDocumentPresent(boolean[] DocInPlace) {
    return PageScanApiJNI.IsDocumentPresent(DocInPlace);
  }

  public static int ScanAndCheck(boolean[] DocInPlace) {
    return PageScanApiJNI.ScanAndCheck(DocInPlace);
  }

  public static long getSfNone() {
    return PageScanApiJNI.sfNone_get();
  }

  public static long getSfUse() {
    return PageScanApiJNI.sfUse_get();
  }

  public static long getSfAmbientLightElimination() {
    return PageScanApiJNI.sfAmbientLightElimination_get();
  }

  public static int SetScanSettings(TPSAScanSettings ScanSettings) {
    return PageScanApiJNI.SetScanSettings(TPSAScanSettings.getCPtr(ScanSettings), ScanSettings);
  }

  public static int SetScanSettingsEx(TPSAScanSettingsEx ScanSettings) {
    return PageScanApiJNI.SetScanSettingsEx(TPSAScanSettingsEx.getCPtr(ScanSettings), ScanSettings);
  }

  public static int GetScanSettings(TPSAScanSettings ScanSettings) {
    return PageScanApiJNI.GetScanSettings(TPSAScanSettings.getCPtr(ScanSettings), ScanSettings);
  }

  public static int GetScanSettingsEx(TPSAScanSettingsEx ScanSettings) {
    return PageScanApiJNI.GetScanSettingsEx(TPSAScanSettingsEx.getCPtr(ScanSettings), ScanSettings);
  }

  public static int getIoNone() {
    return PageScanApiJNI.ioNone_get();
  }

  public static int getIoStitching() {
    return PageScanApiJNI.ioStitching_get();
  }

  public static int getIoBest() {
    return PageScanApiJNI.ioBest_get();
  }

  public static int PrepareRawImage(int LightSource, int ImageOptimize, int[] ImageWidth, int[] ImageHeight, int[] BitsPerPixel, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareRawImage(LightSource, ImageOptimize, ImageWidth, ImageHeight, BitsPerPixel, ImageBufferSize);
  }

  public static int PrepareRawFacialImage(int LightSource, int ImageOptimize, int[] ImageWidth, int[] ImageHeight, int[] BitsPerPixel, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareRawFacialImage(LightSource, ImageOptimize, ImageWidth, ImageHeight, BitsPerPixel, ImageBufferSize);
  }

  public static int PrepareRawClippedDocumentImage(int LightSource, int ImageOptimize, int[] ImageWidth, int[] ImageHeight, int[] BitsPerPixel, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareRawClippedDocumentImage(LightSource, ImageOptimize, ImageWidth, ImageHeight, BitsPerPixel, ImageBufferSize);
  }

  public static int GetRawImage(byte[] ImageBuffer, long ImageBufferSize) {
    return PageScanApiJNI.GetRawImage(ImageBuffer, ImageBufferSize);
  }

  public static int PrepareBmpImage(int LightSource, int ImageOptimize, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareBmpImage(LightSource, ImageOptimize, ImageBufferSize);
  }

  public static int PrepareBmpFacialImage(int LightSource, int ImageOptimize, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareBmpFacialImage(LightSource, ImageOptimize, ImageBufferSize);
  }

  public static int PrepareBmpClippedDocumentImage(int LightSource, int ImageOptimize, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareBmpClippedDocumentImage(LightSource, ImageOptimize, ImageBufferSize);
  }

  public static int GetBmpImage(byte[] ImageBuffer, long ImageBufferSize) {
    return PageScanApiJNI.GetBmpImage(ImageBuffer, ImageBufferSize);
  }

  public static int PrepareJpegImage(int LightSource, int ImageOptimize, short JpegQuality, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareJpegImage(LightSource, ImageOptimize, JpegQuality, ImageBufferSize);
  }

  public static int PrepareJpegFacialImage(int LightSource, int ImageOptimize, short JpegQuality, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareJpegFacialImage(LightSource, ImageOptimize, JpegQuality, ImageBufferSize);
  }

  public static int PrepareJpegClippedDocumentImage(int LightSource, int ImageOptimize, short JpegQuality, long[] ImageBufferSize) {
    return PageScanApiJNI.PrepareJpegClippedDocumentImage(LightSource, ImageOptimize, JpegQuality, ImageBufferSize);
  }

  public static int GetJpegImage(byte[] ImageBuffer, long ImageBufferSize) {
    return PageScanApiJNI.GetJpegImage(ImageBuffer, ImageBufferSize);
  }

  public static int PreparePngImage(int LightSource, int ImageOptimize, short CompressionLevel, long[] ImageBufferSize) {
    return PageScanApiJNI.PreparePngImage(LightSource, ImageOptimize, CompressionLevel, ImageBufferSize);
  }

  public static int PreparePngFacialImage(int LightSource, int ImageOptimize, short CompressionLevel, long[] ImageBufferSize) {
    return PageScanApiJNI.PreparePngFacialImage(LightSource, ImageOptimize, CompressionLevel, ImageBufferSize);
  }

  public static int PreparePngClippedDocumentImage(int LightSource, int ImageOptimize, short CompressionLevel, long[] ImageBufferSize) {
    return PageScanApiJNI.PreparePngClippedDocumentImage(LightSource, ImageOptimize, CompressionLevel, ImageBufferSize);
  }

  public static int GetPngImage(byte[] ImageBuffer, long ImageBufferSize) {
    return PageScanApiJNI.GetPngImage(ImageBuffer, ImageBufferSize);
  }

  public static int ReadOcr(int[] OcrResult, int[] MrzLength, long[] MrzBufferSize) {
    return PageScanApiJNI.ReadOcr(OcrResult, MrzLength, MrzBufferSize);
  }

  public static int ReadOcrPc(int[] OcrResult, long[] MrzBufferSize) {
    return PageScanApiJNI.ReadOcrPc(OcrResult, MrzBufferSize);
  }

  public static int GetOcrOutputPc(byte[] MrzBuffer, long MrzBufferSize) {
    return PageScanApiJNI.GetOcrOutputPc(MrzBuffer, MrzBufferSize);
  }

  public static int GetOcrOutput(byte[] MrzBuffer, long MrzBufferSize) {
    return PageScanApiJNI.GetOcrOutput(MrzBuffer, MrzBufferSize);
  }

  public static int ReadBarcode(boolean[] BarcodeFound, int[] BarcodeLength, long[] BarcodeBufferSize) {
    return PageScanApiJNI.ReadBarcode(BarcodeFound, BarcodeLength, BarcodeBufferSize);
  }

  public static int GetBarcodeOutput(byte[] BarcodeBuffer, long BarcodeBufferSize) {
    return PageScanApiJNI.GetBarcodeOutput(BarcodeBuffer, BarcodeBufferSize);
  }

  public static int ReadMsr(boolean[] MsrFound, int[] MsrLength, long[] MsrBufferSize) {
    return PageScanApiJNI.ReadMsr(MsrFound, MsrLength, MsrBufferSize);
  }

  public static int GetMsrOutput(byte[] MsrBuffer, long MsrBufferSize) {
    return PageScanApiJNI.GetMsrOutput(MsrBuffer, MsrBufferSize);
  }

  public static int SetDisplayText(String DisplayText) {
    return PageScanApiJNI.SetDisplayText(DisplayText);
  }

  public static int StoreDisplayImage(long Page, long Position, byte[] ImageBuffer, long Width, long Height) {
    return PageScanApiJNI.StoreDisplayImage(Page, Position, ImageBuffer, Width, Height);
  }

  public static int ClearDisplayImage(long Page, long Position) {
    return PageScanApiJNI.ClearDisplayImage(Page, Position);
  }

  public static int ShowDisplayImage(long Page, long Position) {
    return PageScanApiJNI.ShowDisplayImage(Page, Position);
  }

  public static int ShowDisplayImageNoStore(byte[] ImageBuffer, long Width, long Height) {
    return PageScanApiJNI.ShowDisplayImageNoStore(ImageBuffer, Width, Height);
  }

  public static int GetDisplayDimensions(long[] DisplayWidth, long[] DisplayHeight) {
    return PageScanApiJNI.GetDisplayDimensions(DisplayWidth, DisplayHeight);
  }

  public static int ShowDisplayImageAndText(long Page, long Position, String Text) {
    return PageScanApiJNI.ShowDisplayImageAndText(Page, Position, Text);
  }

  public static int ShowDisplayImageNoStoreAndText(byte[] ImageBuffer, long Width, long Height, String Text) {
    return PageScanApiJNI.ShowDisplayImageNoStoreAndText(ImageBuffer, Width, Height, Text);
  }

  public static int CheckDocumentPresentPc(int Light, boolean[] DocInPlace) {
    return PageScanApiJNI.CheckDocumentPresentPc(Light, DocInPlace);
  }

  public static int SetDisplayFont(byte[] FontBuffer, long Size) {
    return PageScanApiJNI.SetDisplayFont(FontBuffer, Size);
  }

  public static void SetupDebugHandler(DebugHandler Handler, int MaxLevel) {
    PageScanApiJNI.SetupDebugHandler(DebugHandler.getCPtr(Handler), Handler, MaxLevel);
  }

  public static void SetupOnDevicePlugHandler(OnDevicePlugHandler Handler) {
    PageScanApiJNI.SetupOnDevicePlugHandler(OnDevicePlugHandler.getCPtr(Handler), Handler);
  }

  public static void SetupOnOcrHandler(OnOcrHandler Handler) {
    PageScanApiJNI.SetupOnOcrHandler(OnOcrHandler.getCPtr(Handler), Handler);
  }

  public static void SetupOnMsrHandler(OnMsrHandler Handler) {
    PageScanApiJNI.SetupOnMsrHandler(OnMsrHandler.getCPtr(Handler), Handler);
  }

  public static void SetupOnBcrHandler(OnBcrHandler Handler) {
    PageScanApiJNI.SetupOnBcrHandler(OnBcrHandler.getCPtr(Handler), Handler);
  }

  public static void SetupOnDocHandler(OnDocHandler Handler) {
    PageScanApiJNI.SetupOnDocHandler(OnDocHandler.getCPtr(Handler), Handler);
  }

  public static void SetupOnDocRemoveHandler(OnDocRemoveHandler Handler) {
    PageScanApiJNI.SetupOnDocRemoveHandler(OnDocRemoveHandler.getCPtr(Handler), Handler);
  }

  public static void SetupOnTouchDisplayHandler(OnTouchDisplayHandler Handler) {
    PageScanApiJNI.SetupOnTouchDisplayHandler(OnTouchDisplayHandler.getCPtr(Handler), Handler);
  }

  public static String GetLastPSAErrorText() {
    return PageScanApiJNI.GetLastPSAErrorText();
  }

  public static int GetLastPSAErrorValue() {
    return PageScanApiJNI.GetLastPSAErrorValue();
  }

}
